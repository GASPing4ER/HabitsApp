{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/DatesGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport '../styles/DatesGrid.css';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  day,\n  date,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dates-grid__square\",\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dates-grid__square__day-name\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dates-grid__square__day-num\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Square;\nconst DatesGrid = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    selectedDate,\n    setSelectedDate\n  } = useContext(HabitsContext);\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const today = new Date();\n  const dates = [];\n\n  // Generate the next 6 dates\n  for (let i = 0; i < 7; i++) {\n    const date = new Date();\n    date.setDate(today.getDate() + i);\n    dates.push(date);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dates-grid\",\n    children: dates.map((date, index) => /*#__PURE__*/_jsxDEV(Square, {\n      day: daysOfWeek[date.getDay()],\n      date: date.getDate(),\n      onClick: () => setSelectedDate(date)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(DatesGrid, \"+GTud/BDuMZJOBogZUBrtbc/kZo=\");\n_c2 = DatesGrid;\nexport default DatesGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"DatesGrid\");","map":{"version":3,"names":["React","useState","useContext","HabitsContext","jsxDEV","_jsxDEV","Square","day","date","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DatesGrid","_s","selectedDate","setSelectedDate","daysOfWeek","today","Date","dates","i","setDate","getDate","push","map","index","getDay","_c2","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/DatesGrid.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\nimport '../styles/DatesGrid.css'\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst Square = ({ day, date, onClick }) => {\n  return (\n    <div className=\"dates-grid__square\" onClick={onClick}>\n      <div className=\"dates-grid__square__day-name\">{day}</div>\n      <div className=\"dates-grid__square__day-num\">{date}</div>\n    </div>\n  );\n};\n\nconst DatesGrid = () => {\n\n  // eslint-disable-next-line no-unused-vars\n  const { selectedDate, setSelectedDate } = useContext(HabitsContext)\n\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const today = new Date();\n  const dates = [];\n  \n  // Generate the next 6 dates\n  for (let i = 0; i < 7; i++) {\n    const date = new Date();\n    date.setDate(today.getDate() + i);\n    dates.push(date);\n  }\n  \n  return (\n    <div className=\"dates-grid\">\n      {dates.map((date, index) => (\n        <Square\n          key={index}\n          day={daysOfWeek[date.getDay()]}\n          date={date.getDate()}\n          onClick={() => setSelectedDate(date)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DatesGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AACnD,OAAO,yBAAyB;AAChC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,MAAM,GAAGA,CAAC;EAAEC,GAAG;EAAEC,IAAI;EAAEC;AAAQ,CAAC,KAAK;EACzC,oBACEJ,OAAA;IAAKK,SAAS,EAAC,oBAAoB;IAACD,OAAO,EAAEA,OAAQ;IAAAE,QAAA,gBACnDN,OAAA;MAAKK,SAAS,EAAC,8BAA8B;MAAAC,QAAA,EAAEJ;IAAG;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eACzDV,OAAA;MAAKK,SAAS,EAAC,6BAA6B;MAAAC,QAAA,EAAEH;IAAI;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtD,CAAC;AAEV,CAAC;AAACC,EAAA,GAPIV,MAAM;AASZ,MAAMW,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEtB;EACA,MAAM;IAAEC,YAAY;IAAEC;EAAgB,CAAC,GAAGlB,UAAU,CAACC,aAAa,CAAC;EAEnE,MAAMkB,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACpE,MAAMC,KAAK,GAAG,IAAIC,IAAI,CAAC,CAAC;EACxB,MAAMC,KAAK,GAAG,EAAE;;EAEhB;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAE;IAC1B,MAAMjB,IAAI,GAAG,IAAIe,IAAI,CAAC,CAAC;IACvBf,IAAI,CAACkB,OAAO,CAACJ,KAAK,CAACK,OAAO,CAAC,CAAC,GAAGF,CAAC,CAAC;IACjCD,KAAK,CAACI,IAAI,CAACpB,IAAI,CAAC;EAClB;EAEA,oBACEH,OAAA;IAAKK,SAAS,EAAC,YAAY;IAAAC,QAAA,EACxBa,KAAK,CAACK,GAAG,CAAC,CAACrB,IAAI,EAAEsB,KAAK,kBACrBzB,OAAA,CAACC,MAAM;MAELC,GAAG,EAAEc,UAAU,CAACb,IAAI,CAACuB,MAAM,CAAC,CAAC,CAAE;MAC/BvB,IAAI,EAAEA,IAAI,CAACmB,OAAO,CAAC,CAAE;MACrBlB,OAAO,EAAEA,CAAA,KAAMW,eAAe,CAACZ,IAAI;IAAE,GAHhCsB,KAAK;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAIX,CACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACG,EAAA,CA5BID,SAAS;AAAAe,GAAA,GAATf,SAAS;AA8Bf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}