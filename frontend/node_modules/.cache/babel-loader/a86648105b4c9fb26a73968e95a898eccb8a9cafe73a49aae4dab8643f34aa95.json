{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    habits,\n    setHabits,\n    selectedDate\n  } = useContext(HabitsContext);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter(habit => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100, 1);\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    const fetchHabits = async () => {\n      const response = await fetch(\"http://localhost:4000/api/habits\");\n    };\n    fetchHabits();\n    updateProgress();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate, habits]);\n  const filteredHabits = habits.filter(habit => habit.date.toDateString() === selectedDate.toDateString());\n  const handleHabitStatusChange = habitIndex => {\n    const updatedHabits = [...filteredHabits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress ? progress : 0, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: filteredHabits.length !== 0 ? filteredHabits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        title: habit.title,\n        description: habit.description,\n        status: habit.status,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)) : \"No habits yet, you should add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"NMDw6/zA6F0kSw3AF9OSIniCTvo=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Habit","ProgressBar","HabitsContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","selectedDate","progress","setProgress","updateProgress","completedHabitsCount","filter","habit","status","length","totalHabitsCount","newProgress","Math","round","fetchHabits","response","fetch","filteredHabits","date","toDateString","handleHabitStatusChange","habitIndex","updatedHabits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","description","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst HabitsGrid = () => {\n\n  // eslint-disable-next-line no-unused-vars\n  const { habits, setHabits, selectedDate} = useContext(HabitsContext)\n\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter((habit) => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n    setProgress(newProgress);\n  };\n\n  useEffect(() => {\n    const fetchHabits = async() => {\n      const response = await fetch(\"http://localhost:4000/api/habits\")\n    }\n    fetchHabits();\n    updateProgress();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [selectedDate, habits]);\n\n  const filteredHabits = habits.filter(\n    (habit) =>\n      habit.date.toDateString() === selectedDate.toDateString()\n  );\n  \n  const handleHabitStatusChange = (habitIndex) => {\n    const updatedHabits = [...filteredHabits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n\n  return(\n      <div className=\"habits-grid\">\n          <div className=\"progress-content\">\n              <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n              <p> {progress ? progress : 0}% </p>\n          </div>\n          <ProgressBar progress={progress}/>\n          <div className=\"habits\">\n            {filteredHabits.length !== 0 ? filteredHabits.map((habit, index) => (\n              <Habit\n                key={index}\n                title={habit.title}\n                description={habit.description}\n                status={habit.status}\n                onStatusChange={() => handleHabitStatusChange(index)}\n              />\n            )) : \"No habits yet, you should add some!\"}\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}