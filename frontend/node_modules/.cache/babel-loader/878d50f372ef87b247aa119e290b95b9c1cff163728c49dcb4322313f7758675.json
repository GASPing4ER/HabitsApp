{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './HabitDetail';\nimport ProgressBar from './ProgressBar';\nimport { useHabitsContext } from '../hooks/useHabitsContext';\nimport { useAuthContext } from \"../hooks/useAuthContext\";\nimport { useDateContext } from \"../hooks/useDateContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  const {\n    habits,\n    dispatch\n  } = useHabitsContext();\n  const [progress, setProgress] = useState(0);\n  const {\n    user\n  } = useAuthContext();\n  const {\n    selectedDate\n  } = useDateContext();\n  selectedDate.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to 0\n  const formattedDate = selectedDate.toISOString().split('T')[0];\n  console.log(\"render\");\n  useEffect(() => {\n    const fetchHabits = async () => {\n      const response = await fetch(\"/api/habits\", {\n        headers: {\n          'Authorization': `Bearer ${user.token}`\n        }\n      });\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_HABITS',\n          payload: json\n        });\n      }\n    };\n    if (user) {\n      fetchHabits();\n    }\n  }, [dispatch, user]);\n  useEffect(() => {\n    const falseHabitsCount = habits.length ? Math.round(habits.filter(habit => habit.status === true).length / habits.length * 100, 1) : 0;\n    setProgress(falseHabitsCount);\n    console.log(falseHabitsCount);\n  }, [habits]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: habits.filter(habit => habit.date === formattedDate).map(filteredHabit => /*#__PURE__*/_jsxDEV(Habit, {\n        habit: filteredHabit\n      }, filteredHabit._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"7a0Wc4Bp/ueMUee9icG4rrQodDA=\", false, function () {\n  return [useHabitsContext, useAuthContext, useDateContext];\n});\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["useEffect","useState","Habit","ProgressBar","useHabitsContext","useAuthContext","useDateContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","dispatch","progress","setProgress","user","selectedDate","setHours","formattedDate","toISOString","split","console","log","fetchHabits","response","fetch","headers","token","json","ok","type","payload","falseHabitsCount","length","Math","round","filter","habit","status","className","children","fileName","_jsxFileName","lineNumber","columnNumber","date","map","filteredHabit","_id","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './HabitDetail';\nimport ProgressBar from './ProgressBar';\nimport { useHabitsContext } from '../hooks/useHabitsContext';\nimport { useAuthContext } from \"../hooks/useAuthContext\"\nimport { useDateContext } from \"../hooks/useDateContext\"\n\nconst HabitsGrid = () => {\n\n  const { habits, dispatch } = useHabitsContext()\n  const [ progress, setProgress ] = useState(0)\n  const { user } = useAuthContext()\n  const { selectedDate } = useDateContext() \n  selectedDate.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to 0\n  const formattedDate = selectedDate.toISOString().split('T')[0];\n\n  console.log(\"render\")\n\n  useEffect(() => {\n    const fetchHabits = async() => {\n      const response = await fetch(\"/api/habits\", {\n        headers: {'Authorization': `Bearer ${user.token}`},\n      })\n      const json = await response.json()\n\n      if (response.ok) {\n        dispatch({type: 'SET_HABITS', payload: json})\n      }\n    }\n\n    if (user) {\n      fetchHabits()\n    }\n  }, [dispatch, user])\n\n  useEffect(() => {\n    const falseHabitsCount = habits.length ? Math.round(\n      (habits.filter(habit => habit.status === true).length / habits.length) * 100,\n      1\n    ) : 0;\n    setProgress(falseHabitsCount);\n    console.log(falseHabitsCount);\n  }, [habits]);\n\n  return(\n      <div className=\"habits-grid\">\n          <ProgressBar progress={progress}/>\n          <div className=\"habits\">\n          {habits.filter((habit) => habit.date === formattedDate).map((filteredHabit) => (\n            <Habit key={filteredHabit._id} habit={filteredHabit} />\n          ))}\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}