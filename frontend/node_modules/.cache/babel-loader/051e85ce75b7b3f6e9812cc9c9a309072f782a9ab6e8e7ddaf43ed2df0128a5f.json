{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  progress\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"progress-bar\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar-fill\",\n      style: {\n        width: `${progress}%`\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 7\n  }, this);\n};\n_c = ProgressBar;\nconst HabitsGrid = () => {\n  _s();\n  const [habits, setHabits] = useState([{\n    title: 'Read Book',\n    description: 'Complete today to have the first streak',\n    xp: 50,\n    status: true\n  }, {\n    title: 'Learning French',\n    description: 'Complete today to have the first streak',\n    xp: 50,\n    status: false\n  }, {\n    title: 'Morning Run',\n    description: 'Complete today to have the first streak',\n    xp: 50,\n    status: false\n  }]);\n  const [progress, setProgress] = useState(0); // Initial progress value\n  const [xp, setXp] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter(habit => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100, 1);\n    setProgress(newProgress);\n  };\n  const updateXp = () => {\n    const completedHabitsCount = habits.filter(habit => habit.status === true);\n    const completeXpCount = completedHabitsCount.reduce((accumulator, value) => accumulator + value.xp, 0);\n    const totalXpCount = habits.reduce((accumulator, value) => accumulator + value.xp, 0);\n    const newXp = Math.round(completeXpCount / totalXpCount * 100, 1);\n    setXp(newXp);\n  };\n  useEffect(() => {\n    updateProgress();\n    updateXp();\n  }, [habits]);\n  const handleHabitStatusChange = habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n  const [showForm, setShowForm] = useState(false);\n  const handleAddHabit = newHabit => {\n    setHabits([...habits, newHabit]);\n    setShowForm(false); // Hide the form after adding a habit\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"contnt\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", progress, \"% \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: progress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\" \", progress, \"% \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n        progress: xp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"habits\",\n        children: [habits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n          title: habit.title,\n          description: habit.description,\n          status: habit.status,\n          xp: habit.xp,\n          onStatusChange: () => handleHabitStatusChange(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 17\n        }, this)), showForm ? /*#__PURE__*/_jsxDEV(HabitForm, {\n          onAddHabit: handleAddHabit\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 27\n        }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setShowForm(true),\n          children: \"Add Habit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"sAWezL0Ll4fuVLHXLtNG+n0MJyw=\");\n_c2 = HabitsGrid;\nexport default HabitsGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"ProgressBar\");\n$RefreshReg$(_c2, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","Habit","HabitForm","jsxDEV","_jsxDEV","ProgressBar","progress","className","children","style","width","fileName","_jsxFileName","lineNumber","columnNumber","_c","HabitsGrid","_s","habits","setHabits","title","description","xp","status","setProgress","setXp","updateProgress","completedHabitsCount","filter","habit","length","totalHabitsCount","newProgress","Math","round","updateXp","completeXpCount","reduce","accumulator","value","totalXpCount","newXp","handleHabitStatusChange","habitIndex","updatedHabits","showForm","setShowForm","handleAddHabit","newHabit","map","index","onStatusChange","onAddHabit","onClick","_c2","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\n\nconst ProgressBar = ({ progress }) => {\n  \n    return (\n      <div className=\"progress-bar\">\n        <div\n          className=\"progress-bar-fill\"\n          style={{ width: `${progress}%` }}\n        ></div>\n      </div>\n    );\n  };\n\nconst HabitsGrid = () => {\n\n  const [habits, setHabits] = useState([\n    { title: 'Read Book', description: 'Complete today to have the first streak', xp: 50, status: true },\n    { title: 'Learning French', description: 'Complete today to have the first streak', xp: 50, status: false },\n    { title: 'Morning Run', description: 'Complete today to have the first streak', xp: 50, status: false },\n  ]);\n\n  const [progress, setProgress] = useState(0); // Initial progress value\n  const [xp, setXp] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter((habit) => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n    setProgress(newProgress);\n  };\n\n  const updateXp = () => {\n    const completedHabitsCount = habits.filter((habit) => habit.status === true);\n    const completeXpCount = completedHabitsCount.reduce((accumulator, value) => accumulator + value.xp, 0);\n    const totalXpCount = habits.reduce((accumulator, value) => accumulator + value.xp, 0);\n    const newXp = Math.round((completeXpCount / totalXpCount) * 100,1);\n    setXp(newXp);\n  };\n\n  useEffect(() => {\n    updateProgress();\n    updateXp();\n  }, [habits]);\n\n  const handleHabitStatusChange = (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const handleAddHabit = (newHabit) => {\n    setHabits([...habits, newHabit]);\n    setShowForm(false); // Hide the form after adding a habit\n  };\n\n  return(\n      <div className='contnt'>\n        <div className=\"habits-grid\">\n            <div className=\"progress-content\">\n                <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n                <p> {progress}% </p>\n            </div>\n            <ProgressBar progress={progress}/>\n            <div className=\"progress-content\">\n                <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n                <p> {progress}% </p>\n            </div>\n            <ProgressBar progress={xp}/>\n            <div className=\"habits\">\n              {habits.map((habit, index) => (\n                <Habit\n                  key={index}\n                  title={habit.title}\n                  description={habit.description}\n                  status={habit.status}\n                  xp={habit.xp}\n                  onStatusChange={() => handleHabitStatusChange(index)}\n                />\n              ))}\n              {showForm ? <HabitForm onAddHabit={handleAddHabit} /> : \"\" }\n              <button onClick={() => setShowForm(true)}>Add Habit</button>\n            </div>\n        </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}