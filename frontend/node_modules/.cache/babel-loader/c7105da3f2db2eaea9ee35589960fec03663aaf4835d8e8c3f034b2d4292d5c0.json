{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/DatesGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDateContext } from \"../hooks/useDateContext\";\nimport '../styles/DatesGrid.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Square = ({\n  day,\n  date,\n  isActive,\n  onClick\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `dates-grid__square ${isActive ? 'active' : ''}`,\n    onClick: onClick,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dates-grid__square__day-name\",\n      children: day\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dates-grid__square__day-num\",\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n};\n_c = Square;\nconst DatesGrid = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    setSelectedDate\n  } = useDateContext();\n  const [activeSquare, setActiveSquare] = useState(0);\n  const handleClick = index => {\n    setActiveSquare(index);\n  };\n  const handleSquareClick = (date, index) => {\n    setSelectedDate(date);\n    handleClick(index);\n  };\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const today = new Date();\n  const dates = [];\n\n  // Generate the next 6 dates\n  for (let i = 0; i < 7; i++) {\n    const date = new Date();\n    date.setDate(today.getDate() + i);\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Month value starts from 0, so we add 1\n    const year = date.getFullYear();\n    const formattedDate = `${day}-${month}-${year}`;\n    dates.push(formattedDate);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dates-grid\",\n    children: dates.map((date, index) => /*#__PURE__*/_jsxDEV(Square, {\n      day: daysOfWeek[date.getDay()],\n      date: date.getDate(),\n      isActive: index === activeSquare,\n      onClick: () => handleSquareClick(date, index)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n_s(DatesGrid, \"wi2i4yqMUSw26ZXH9USvje/v7HE=\", false, function () {\n  return [useDateContext];\n});\n_c2 = DatesGrid;\nexport default DatesGrid;\nvar _c, _c2;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"DatesGrid\");","map":{"version":3,"names":["React","useState","useDateContext","jsxDEV","_jsxDEV","Square","day","date","isActive","onClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","DatesGrid","_s","setSelectedDate","activeSquare","setActiveSquare","handleClick","index","handleSquareClick","daysOfWeek","today","Date","dates","i","setDate","getDate","month","getMonth","year","getFullYear","formattedDate","push","map","getDay","_c2","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/DatesGrid.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDateContext } from \"../hooks/useDateContext\"\nimport '../styles/DatesGrid.css'\n\nconst Square = ({ day, date, isActive, onClick }) => {\n  return (\n    <div className={`dates-grid__square ${isActive ? 'active' : ''}`} onClick={onClick}>\n      <div className=\"dates-grid__square__day-name\">{day}</div>\n      <div className=\"dates-grid__square__day-num\">{date}</div>\n    </div>\n  );\n};\n\nconst DatesGrid = () => {\n\n  // eslint-disable-next-line no-unused-vars\n  const { setSelectedDate } = useDateContext()\n\n  const [activeSquare, setActiveSquare] = useState(0);\n\n  const handleClick = (index) => {\n    setActiveSquare(index);\n  };\n\n  const handleSquareClick = (date, index) => {\n    setSelectedDate(date);\n    handleClick(index);\n  };\n\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const today = new Date();\n  const dates = [];\n  \n  // Generate the next 6 dates\n  for (let i = 0; i < 7; i++) {\n    const date = new Date();\n    date.setDate(today.getDate() + i);\n    const day = date.getDate();\n    const month = date.getMonth() + 1; // Month value starts from 0, so we add 1\n    const year = date.getFullYear();\n\n    const formattedDate = `${day}-${month}-${year}`;\n    dates.push(formattedDate);\n  }\n  \n  return (\n    <div className=\"dates-grid\">\n      {dates.map((date, index) => (\n        <Square\n          key={index}\n          day={daysOfWeek[date.getDay()]}\n          date={date.getDate()}\n          isActive={index === activeSquare}\n          onClick={() => handleSquareClick(date, index)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default DatesGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}