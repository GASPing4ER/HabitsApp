{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  const {\n    habits,\n    setHabits,\n    selectedDate\n  } = useContext(HabitsContext);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const habitsForDate = habits.filter(habit => habit.date.toDateString() === selectedDate.toDateString());\n    const completedHabitsCount = habitsForDate.filter(habit => habit.status === true).length;\n    const totalHabitsCount = habitsForDate.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100);\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    updateProgress();\n  }, [selectedDate, habits]);\n  const handleHabitStatusChange = habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n  const filteredHabits = habits.filter(habit => habit.date.toDateString() === selectedDate.toDateString());\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [progress, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: filteredHabits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        title: habit.title,\n        description: habit.description,\n        status: habit.status,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(HabitsGrid, \"+rS8jgiqOkvULH5pGhOLwuI+WQU=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Habit","ProgressBar","HabitsContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","selectedDate","progress","setProgress","updateProgress","habitsForDate","filter","habit","date","toDateString","completedHabitsCount","status","length","totalHabitsCount","newProgress","Math","round","handleHabitStatusChange","habitIndex","updatedHabits","filteredHabits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","description","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst HabitsGrid = () => {\n  const { habits, setHabits, selectedDate } = useContext(HabitsContext);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const habitsForDate = habits.filter(\n      (habit) => habit.date.toDateString() === selectedDate.toDateString()\n    );\n    const completedHabitsCount = habitsForDate.filter(\n      (habit) => habit.status === true\n    ).length;\n    const totalHabitsCount = habitsForDate.length;\n    const newProgress = Math.round(\n      (completedHabitsCount / totalHabitsCount) * 100\n    );\n    setProgress(newProgress);\n  };\n\n  useEffect(() => {\n    updateProgress();\n  }, [selectedDate, habits]);\n\n  const handleHabitStatusChange = (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n\n  const filteredHabits = habits.filter(\n    (habit) => habit.date.toDateString() === selectedDate.toDateString()\n  );\n\n  return (\n    <div className=\"habits-grid\">\n      <div className=\"progress-content\">\n        <p>\n          {progress !== 100\n            ? \"You are almost done, go ahead!\"\n            : \"Congratulations, you are done!\"}\n        </p>\n        <p>{progress}%</p>\n      </div>\n      <ProgressBar progress={progress} />\n      <div className=\"habits\">\n        {filteredHabits.map((habit, index) => (\n          <Habit\n            key={index}\n            title={habit.title}\n            description={habit.description}\n            status={habit.status}\n            onStatusChange={() => handleHabitStatusChange(index)}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default HabitsGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGV,UAAU,CAACG,aAAa,CAAC;EACrE,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE7C,MAAMc,cAAc,GAAGA,CAAA,KAAM;IAC3B,MAAMC,aAAa,GAAGN,MAAM,CAACO,MAAM,CAChCC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC,KAAKR,YAAY,CAACQ,YAAY,CAAC,CACrE,CAAC;IACD,MAAMC,oBAAoB,GAAGL,aAAa,CAACC,MAAM,CAC9CC,KAAK,IAAKA,KAAK,CAACI,MAAM,KAAK,IAC9B,CAAC,CAACC,MAAM;IACR,MAAMC,gBAAgB,GAAGR,aAAa,CAACO,MAAM;IAC7C,MAAME,WAAW,GAAGC,IAAI,CAACC,KAAK,CAC3BN,oBAAoB,GAAGG,gBAAgB,GAAI,GAC9C,CAAC;IACDV,WAAW,CAACW,WAAW,CAAC;EAC1B,CAAC;EAEDzB,SAAS,CAAC,MAAM;IACde,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,CAACH,YAAY,EAAEF,MAAM,CAAC,CAAC;EAE1B,MAAMkB,uBAAuB,GAAIC,UAAU,IAAK;IAC9C,MAAMC,aAAa,GAAG,CAAC,GAAGpB,MAAM,CAAC;IACjCoB,aAAa,CAACD,UAAU,CAAC,CAACP,MAAM,GAAG,CAACQ,aAAa,CAACD,UAAU,CAAC,CAACP,MAAM;IACpEX,SAAS,CAACmB,aAAa,CAAC;EAC1B,CAAC;EAED,MAAMC,cAAc,GAAGrB,MAAM,CAACO,MAAM,CACjCC,KAAK,IAAKA,KAAK,CAACC,IAAI,CAACC,YAAY,CAAC,CAAC,KAAKR,YAAY,CAACQ,YAAY,CAAC,CACrE,CAAC;EAED,oBACEb,OAAA;IAAKyB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1B1B,OAAA;MAAKyB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B1B,OAAA;QAAA0B,QAAA,EACGpB,QAAQ,KAAK,GAAG,GACb,gCAAgC,GAChC;MAAgC;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnC,CAAC,eACJ9B,OAAA;QAAA0B,QAAA,GAAIpB,QAAQ,EAAC,GAAC;MAAA;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACf,CAAC,eACN9B,OAAA,CAACH,WAAW;MAACS,QAAQ,EAAEA;IAAS;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnC9B,OAAA;MAAKyB,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpBF,cAAc,CAACO,GAAG,CAAC,CAACpB,KAAK,EAAEqB,KAAK,kBAC/BhC,OAAA,CAACJ,KAAK;QAEJqC,KAAK,EAAEtB,KAAK,CAACsB,KAAM;QACnBC,WAAW,EAAEvB,KAAK,CAACuB,WAAY;QAC/BnB,MAAM,EAAEJ,KAAK,CAACI,MAAO;QACrBoB,cAAc,EAAEA,CAAA,KAAMd,uBAAuB,CAACW,KAAK;MAAE,GAJhDA,KAAK;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC5B,EAAA,CAxDID,UAAU;AAAAmC,EAAA,GAAVnC,UAAU;AA0DhB,eAAeA,UAAU;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}