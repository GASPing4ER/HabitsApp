{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/ProgressBar.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgressBar = ({\n  progress\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress ? progress : 0, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-bar\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"progress-bar-fill\",\n        style: {\n          width: `${progress}%`\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true);\n};\n_c = ProgressBar;\nexport default ProgressBar;\n\n// Habits Grid stuff:\n\n// const [progress, setProgress] = useState(0); // Initial progress value\n\n// const updateProgress = () => {\n//   const completedHabitsCount = habits ? habits.filter((habit) => habit.status === true).length : 0;\n//   const totalHabitsCount = habits.length;\n//   const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n//   setProgress(newProgress);\n// };\n\n//  <div className=\"progress-content\">\n\n//           </div>\n//           <ProgressBar progress={progress}/> \n\n// const handleHabitStatusChange = async (habitIndex) => {\n//   const updatedHabits = [...habits];\n//   updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n//   setHabits(updatedHabits);\n\n// const habitToUpdate = updatedHabits[habitIndex];\n\n// try {\n//   const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n//     method: 'PATCH',\n//     headers: {\n//       'Content-Type': 'application/json',\n//     },\n//     body: JSON.stringify(habitToUpdate),\n//   });\n\n//     if (!response.ok) {\n//       throw new Error('Failed to update habit.');\n//     }\n//   } catch (error) {\n//     console.error(error);\n//     // Handle error scenario\n//   }\n//   console.log(\"updating\")\n// };\nvar _c;\n$RefreshReg$(_c, \"ProgressBar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgressBar","progress","children","className","fileName","_jsxFileName","lineNumber","columnNumber","style","width","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/ProgressBar.js"],"sourcesContent":["import React from 'react';\n\nconst ProgressBar = ({ progress }) => {\n  \n    return (\n      <>\n        <div className=\"progress-content\">\n          <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n          <p> {progress ? progress : 0}% </p>\n        </div>\n          <div className=\"progress-bar\">\n            <div\n              className=\"progress-bar-fill\"\n              style={{ width: `${progress}%` }}\n            ></div>\n          </div>\n        </>\n    );\n  };\n\nexport default ProgressBar\n\n// Habits Grid stuff:\n\n// const [progress, setProgress] = useState(0); // Initial progress value\n\n// const updateProgress = () => {\n//   const completedHabitsCount = habits ? habits.filter((habit) => habit.status === true).length : 0;\n//   const totalHabitsCount = habits.length;\n//   const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n//   setProgress(newProgress);\n// };\n\n\n//  <div className=\"progress-content\">\n\n//           </div>\n//           <ProgressBar progress={progress}/> \n\n  // const handleHabitStatusChange = async (habitIndex) => {\n  //   const updatedHabits = [...habits];\n  //   updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n  //   setHabits(updatedHabits);\n\n      // const habitToUpdate = updatedHabits[habitIndex];\n  \n    // try {\n    //   const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n    //     method: 'PATCH',\n    //     headers: {\n    //       'Content-Type': 'application/json',\n    //     },\n    //     body: JSON.stringify(habitToUpdate),\n    //   });\n  \n  //     if (!response.ok) {\n  //       throw new Error('Failed to update habit.');\n  //     }\n  //   } catch (error) {\n  //     console.error(error);\n  //     // Handle error scenario\n  //   }\n  //   console.log(\"updating\")\n  // };"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,WAAW,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAElC,oBACEJ,OAAA,CAAAE,SAAA;IAAAG,QAAA,gBACEL,OAAA;MAAKM,SAAS,EAAC,kBAAkB;MAAAD,QAAA,gBAC/BL,OAAA;QAAAK,QAAA,GAAG,GAAC,EAACD,QAAQ,KAAK,GAAG,GAAG,gCAAgC,GAAG,gCAAgC,EAAC,GAAC;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eACjGV,OAAA;QAAAK,QAAA,GAAG,GAAC,EAACD,QAAQ,GAAGA,QAAQ,GAAG,CAAC,EAAC,IAAE;MAAA;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,eACJV,OAAA;MAAKM,SAAS,EAAC,cAAc;MAAAD,QAAA,eAC3BL,OAAA;QACEM,SAAS,EAAC,mBAAmB;QAC7BK,KAAK,EAAE;UAAEC,KAAK,EAAG,GAAER,QAAS;QAAG;MAAE;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA,eACN,CAAC;AAET,CAAC;AAACG,EAAA,GAhBEV,WAAW;AAkBjB,eAAeA,WAAW;;AAE1B;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;;AAEE;AACA;AACA;AACA;;AAEI;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAU,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}