{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    habits,\n    setHabits,\n    selectedDate,\n    dispatch\n  } = useContext(HabitsContext);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits ? habits.filter(habit => habit.status === true).length : 0;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100, 1);\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    const fetchHabits = async () => {\n      const response = await fetch(\"/api/habits\");\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_HABITS',\n          payload: json\n        });\n      }\n    };\n    fetchHabits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  // const filteredHabits = habits ? habits.filter(\n  //   (habit) =>\n  //     habit.date.toDateString() === selectedDate.toDateString()\n  // ) : \"\";\n\n  const handleHabitStatusChange = async habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n    const habitToUpdate = updatedHabits[habitIndex];\n    try {\n      const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(habitToUpdate)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update habit.');\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error scenario\n    }\n\n    console.log(\"updating\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress ? progress : 0, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: habits.length !== 0 ? habits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        id: habit._id,\n        habit: habit,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 15\n      }, this)) : \"No habits yet, you should add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"fNMBO8h43eaiGJerIX7cQjf8BlU=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Habit","ProgressBar","HabitsContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","selectedDate","dispatch","progress","setProgress","updateProgress","completedHabitsCount","filter","habit","status","length","totalHabitsCount","newProgress","Math","round","fetchHabits","response","fetch","json","ok","type","payload","handleHabitStatusChange","habitIndex","updatedHabits","habitToUpdate","_id","method","headers","body","JSON","stringify","Error","error","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","id","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst HabitsGrid = () => {\n\n  // eslint-disable-next-line no-unused-vars\n  const { habits, setHabits, selectedDate, dispatch } = useContext(HabitsContext)\n\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits ? habits.filter((habit) => habit.status === true).length : 0;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n    setProgress(newProgress);\n  };\n\n  useEffect(() => {\n    const fetchHabits = async() => {\n      const response = await fetch(\"/api/habits\")\n      const json = await response.json()\n\n      if (response.ok) {\n        dispatch({type: 'SET_HABITS', payload: json})\n      }\n    }\n    fetchHabits()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n\n  // const filteredHabits = habits ? habits.filter(\n  //   (habit) =>\n  //     habit.date.toDateString() === selectedDate.toDateString()\n  // ) : \"\";\n  \n  const handleHabitStatusChange = async (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  \n    const habitToUpdate = updatedHabits[habitIndex];\n  \n    try {\n      const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(habitToUpdate),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to update habit.');\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error scenario\n    }\n    console.log(\"updating\")\n  };\n\n  return(\n      <div className=\"habits-grid\">\n          <div className=\"progress-content\">\n              <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n              <p> {progress ? progress : 0}% </p>\n          </div>\n          <ProgressBar progress={progress}/>\n          <div className=\"habits\">\n            {habits.length !== 0 ? habits.map((habit, index) => (\n              <Habit\n                key={index}\n                id = {habit._id}\n                habit = {habit}\n                onStatusChange={() => handleHabitStatusChange(index)}\n              />\n            )) : \"No habits yet, you should add some!\"}\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}