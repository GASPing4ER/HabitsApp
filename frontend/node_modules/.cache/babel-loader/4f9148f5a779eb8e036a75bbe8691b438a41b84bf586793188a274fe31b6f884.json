{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  const {\n    habits,\n    setHabits\n  } = useContext(HabitsContext);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter(habit => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100, 1);\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    updateProgress();\n  }, [habits]);\n  const handleHabitStatusChange = habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: habits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        title: habit.title,\n        description: habit.description,\n        status: habit.status,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 15\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"vuGRaN8k4cGQA1YpY7Kd3NWYPo4=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Habit","HabitForm","ProgressBar","HabitsContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","progress","setProgress","updateProgress","completedHabitsCount","filter","habit","status","length","totalHabitsCount","newProgress","Math","round","handleHabitStatusChange","habitIndex","updatedHabits","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","title","description","onStatusChange","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst HabitsGrid = () => {\n\n  const { habits, setHabits } = useContext(HabitsContext)\n\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter((habit) => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n    setProgress(newProgress);\n  };\n\n  useEffect(() => {\n    updateProgress();\n  }, [habits]);\n\n  const handleHabitStatusChange = (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n\n  return(\n      <div className=\"habits-grid\">\n          <div className=\"progress-content\">\n              <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n              <p> {progress}% </p>\n          </div>\n          <ProgressBar progress={progress}/>\n          <div className=\"habits\">\n            {habits.map((habit, index) => (\n              <Habit\n                key={index}\n                title={habit.title}\n                description={habit.description}\n                status={habit.status}\n                onStatusChange={() => handleHabitStatusChange(index)}\n              />\n            ))}\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}