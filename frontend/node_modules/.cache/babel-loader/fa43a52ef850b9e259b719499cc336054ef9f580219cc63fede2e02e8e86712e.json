{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\nimport ProgressBar from './ProgressBar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  const [habits, setHabits] = useState([{\n    title: 'Read Book',\n    description: 'Complete today to have the first streak',\n    status: true\n  }, {\n    title: 'Learning French',\n    description: 'Complete today to have the first streak',\n    status: false\n  }, {\n    title: 'Morning Run',\n    description: 'Complete today to have the first streak',\n    status: false\n  }]);\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter(habit => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round(completedHabitsCount / totalHabitsCount * 100, 1);\n    setProgress(newProgress);\n  };\n  useEffect(() => {\n    updateProgress();\n  }, [habits]);\n  const handleHabitStatusChange = habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n  const [showForm, setShowForm] = useState(false);\n  const handleAddHabit = newHabit => {\n    setHabits([...habits, newHabit]);\n    setShowForm(false); // Hide the form after adding a habit\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progress-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\", \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", progress, \"% \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(ProgressBar, {\n      progress: progress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: [habits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        title: habit.title,\n        description: habit.description,\n        status: habit.status,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 15\n      }, this)), showForm ? /*#__PURE__*/_jsxDEV(HabitForm, {\n        onAddHabit: handleAddHabit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this) : \"\", /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowForm(true),\n        children: \"Add Habit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"2lcxLKolmiTsncONufbe/6yBEJg=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","Habit","HabitForm","ProgressBar","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","title","description","status","progress","setProgress","updateProgress","completedHabitsCount","filter","habit","length","totalHabitsCount","newProgress","Math","round","handleHabitStatusChange","habitIndex","updatedHabits","showForm","setShowForm","handleAddHabit","newHabit","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","index","onStatusChange","onAddHabit","onClick","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport HabitForm from './HabitForm';\nimport ProgressBar from './ProgressBar';\n\nconst HabitsGrid = () => {\n\n  const [habits, setHabits] = useState([\n    { title: 'Read Book', description: 'Complete today to have the first streak', status: true },\n    { title: 'Learning French', description: 'Complete today to have the first streak', status: false },\n    { title: 'Morning Run', description: 'Complete today to have the first streak', status: false },\n  ]);\n\n  const [progress, setProgress] = useState(0); // Initial progress value\n\n  const updateProgress = () => {\n    const completedHabitsCount = habits.filter((habit) => habit.status === true).length;\n    const totalHabitsCount = habits.length;\n    const newProgress = Math.round((completedHabitsCount / totalHabitsCount) * 100,1);\n    setProgress(newProgress);\n  };\n\n  useEffect(() => {\n    updateProgress();\n  }, [habits]);\n\n  const handleHabitStatusChange = (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  };\n\n  const [showForm, setShowForm] = useState(false);\n\n  const handleAddHabit = (newHabit) => {\n    setHabits([...habits, newHabit]);\n    setShowForm(false); // Hide the form after adding a habit\n  };\n\n  return(\n      <div className=\"habits-grid\">\n          <div className=\"progress-content\">\n              <p> {progress !== 100 ? \"You are almost done, go ahead!\" : \"Congratulations, you are done!\"} </p>\n              <p> {progress}% </p>\n          </div>\n          <ProgressBar progress={progress}/>\n          <div className=\"habits\">\n            {habits.map((habit, index) => (\n              <Habit\n                key={index}\n                title={habit.title}\n                description={habit.description}\n                status={habit.status}\n                onStatusChange={() => handleHabitStatusChange(index)}\n              />\n            ))}\n            {showForm ? <HabitForm onAddHabit={handleAddHabit} /> : \"\" }\n            <button onClick={() => setShowForm(true)}>Add Habit</button>\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}