{"ast":null,"code":"var _jsxFileName = \"/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst HabitsGrid = () => {\n  _s();\n  // eslint-disable-next-line no-unused-vars\n  const {\n    habits,\n    setHabits,\n    selectedDate,\n    dispatch\n  } = useContext(HabitsContext);\n  useEffect(() => {\n    const fetchHabits = async () => {\n      const response = await fetch(\"/api/habits\");\n      const json = await response.json();\n      if (response.ok) {\n        dispatch({\n          type: 'SET_HABITS',\n          payload: json\n        });\n      }\n    };\n    fetchHabits();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n  const handleHabitStatusChange = async habitIndex => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n    const habitToUpdate = updatedHabits[habitIndex];\n    try {\n      const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(habitToUpdate)\n      });\n      if (!response.ok) {\n        throw new Error('Failed to update habit.');\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error scenario\n    }\n\n    console.log(\"updating\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"habits-grid\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"habits\",\n      children: habits.length !== 0 ? habits.map((habit, index) => /*#__PURE__*/_jsxDEV(Habit, {\n        id: habit._id,\n        habit: habit,\n        onStatusChange: () => handleHabitStatusChange(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }, this)) : \"No habits yet, you should add some!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, this);\n};\n_s(HabitsGrid, \"aoxfo0k3G1TsK+LhkQXoOD652kM=\");\n_c = HabitsGrid;\nexport default HabitsGrid;\nvar _c;\n$RefreshReg$(_c, \"HabitsGrid\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Habit","ProgressBar","HabitsContext","jsxDEV","_jsxDEV","HabitsGrid","_s","habits","setHabits","selectedDate","dispatch","fetchHabits","response","fetch","json","ok","type","payload","handleHabitStatusChange","habitIndex","updatedHabits","status","habitToUpdate","_id","method","headers","body","JSON","stringify","Error","error","console","log","className","children","length","map","habit","index","id","onStatusChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/gaspersimec/Documents/HabitsApp/frontend/src/components/HabitsGrid.js"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport '../styles/HabitsGrid.css';\nimport Habit from './Habit';\nimport ProgressBar from './ProgressBar';\nimport { HabitsContext } from '../context/HabitsContext';\n\nconst HabitsGrid = () => {\n\n  // eslint-disable-next-line no-unused-vars\n  const { habits, setHabits, selectedDate, dispatch } = useContext(HabitsContext)\n\n  useEffect(() => {\n    const fetchHabits = async() => {\n      const response = await fetch(\"/api/habits\")\n      const json = await response.json()\n\n      if (response.ok) {\n        dispatch({type: 'SET_HABITS', payload: json})\n      }\n    }\n    fetchHabits()\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [dispatch]);\n  \n  const handleHabitStatusChange = async (habitIndex) => {\n    const updatedHabits = [...habits];\n    updatedHabits[habitIndex].status = !updatedHabits[habitIndex].status;\n    setHabits(updatedHabits);\n  \n    const habitToUpdate = updatedHabits[habitIndex];\n  \n    try {\n      const response = await fetch(`/api/habits/${habitToUpdate._id}`, {\n        method: 'PATCH',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(habitToUpdate),\n      });\n  \n      if (!response.ok) {\n        throw new Error('Failed to update habit.');\n      }\n    } catch (error) {\n      console.error(error);\n      // Handle error scenario\n    }\n    console.log(\"updating\")\n  };\n\n  return(\n      <div className=\"habits-grid\">\n          <div className=\"habits\">\n            {habits.length !== 0 ? habits.map((habit, index) => (\n              <Habit\n                key={index}\n                id = {habit._id}\n                habit = {habit}\n                onStatusChange={() => handleHabitStatusChange(index)}\n              />\n            )) : \"No habits yet, you should add some!\"}\n          </div>\n      </div>\n  )\n}\n\nexport default HabitsGrid;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,QAAQ,OAAO;AAC9D,OAAO,0BAA0B;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,WAAW,MAAM,eAAe;AACvC,SAASC,aAAa,QAAQ,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzD,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAEvB;EACA,MAAM;IAAEC,MAAM;IAAEC,SAAS;IAAEC,YAAY;IAAEC;EAAS,CAAC,GAAGX,UAAU,CAACG,aAAa,CAAC;EAE/EL,SAAS,CAAC,MAAM;IACd,MAAMc,WAAW,GAAG,MAAAA,CAAA,KAAW;MAC7B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,aAAa,CAAC;MAC3C,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;MAElC,IAAIF,QAAQ,CAACG,EAAE,EAAE;QACfL,QAAQ,CAAC;UAACM,IAAI,EAAE,YAAY;UAAEC,OAAO,EAAEH;QAAI,CAAC,CAAC;MAC/C;IACF,CAAC;IACDH,WAAW,CAAC,CAAC;IACf;EACA,CAAC,EAAE,CAACD,QAAQ,CAAC,CAAC;EAEd,MAAMQ,uBAAuB,GAAG,MAAOC,UAAU,IAAK;IACpD,MAAMC,aAAa,GAAG,CAAC,GAAGb,MAAM,CAAC;IACjCa,aAAa,CAACD,UAAU,CAAC,CAACE,MAAM,GAAG,CAACD,aAAa,CAACD,UAAU,CAAC,CAACE,MAAM;IACpEb,SAAS,CAACY,aAAa,CAAC;IAExB,MAAME,aAAa,GAAGF,aAAa,CAACD,UAAU,CAAC;IAE/C,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,eAAcS,aAAa,CAACC,GAAI,EAAC,EAAE;QAC/DC,MAAM,EAAE,OAAO;QACfC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,aAAa;MACpC,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAM,IAAIc,KAAK,CAAC,yBAAyB,CAAC;MAC5C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;MACpB;IACF;;IACAC,OAAO,CAACC,GAAG,CAAC,UAAU,CAAC;EACzB,CAAC;EAED,oBACI5B,OAAA;IAAK6B,SAAS,EAAC,aAAa;IAAAC,QAAA,eACxB9B,OAAA;MAAK6B,SAAS,EAAC,QAAQ;MAAAC,QAAA,EACpB3B,MAAM,CAAC4B,MAAM,KAAK,CAAC,GAAG5B,MAAM,CAAC6B,GAAG,CAAC,CAACC,KAAK,EAAEC,KAAK,kBAC7ClC,OAAA,CAACJ,KAAK;QAEJuC,EAAE,EAAIF,KAAK,CAACd,GAAI;QAChBc,KAAK,EAAIA,KAAM;QACfG,cAAc,EAAEA,CAAA,KAAMtB,uBAAuB,CAACoB,KAAK;MAAE,GAHhDA,KAAK;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIX,CACF,CAAC,GAAG;IAAqC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEZ,CAAC;AAAAtC,EAAA,CA1DKD,UAAU;AAAAwC,EAAA,GAAVxC,UAAU;AA4DhB,eAAeA,UAAU;AAAC,IAAAwC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}